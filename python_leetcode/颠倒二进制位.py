# -*-coding:utf-8-*-

# 颠倒给定的 32 位无符号整数的二进制位。
# 输入: 00000010100101000001111010011100
# 输出: 00111001011110000010100101000000
# 解释: 输入的二进制串 00000010100101000001111010011100 表示无符号整数 43261596，
#      因此返回 964176192，其二进制表示形式为 00111001011110000010100101000000。

# def reverseBits(n):
#     res = 0
#     for i in range(32):
#         res = (res << 1) | (n & 1)  # 向左移动一个0位 （0）|（n & 1）
#         n >>= 1  # n最后删除一位
#     return res

def reverseBits(self, n):
    ss = str(bin(n)[2:])[::-1]
    while len(ss) < 32:
        ss += '0'  # 补齐32位
    return int(ss, 2)


if __name__ == '__main__':
    n = 00000010100101000001111010011100
    print(reverseBits(n))

    # a ='00111100'
    # b = '00001101'
    # print(int(a,2))
    # print()